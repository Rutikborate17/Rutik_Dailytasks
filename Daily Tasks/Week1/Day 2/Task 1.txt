-- Task 3

CREATE DATABASE Employees_db;
USE Employees_db;

CREATE TABLE Employees(

EmployeeID INT PRIMARY KEY,
FirstName VARCHAR(50) NOT NULL,
LastName VARCHAR(50) NOT NULL,
Email VARCHAR(50) NOT NULL,
Salary INT NOT NULL,
Department VARCHAR(50)
);

-- To Insert the vales in the table

INSERT INTO Employees VALUES(1, "John", "Doe", "john.doe@company.com", 60000, "Marketing");
INSERT INTO Employees VALUES(2, "Jane", "Smith", "jane.smith@company.com", 75000, "Sales");
INSERT INTO Employees VALUES(3, "Michael", "Johnson", "michael.johnson@company.com", 85000, "Marketing");
INSERT INTO Employees VALUES(4, "Emily", "Williams", "emily.williams@company.com", 72000, "IT");
INSERT INTO Employees VALUES(5, "David", "Brown", "david.brown@company.com", 65000, "Sales");
INSERT INTO Employees VALUES(6, "Sarah", "Davis", "sarah.davis@company.com", 90000,  'IT');
INSERT INTO Employees VALUES(7, "Robert", "Miller", "robert.miller@company.com",  70000, "Finance");
INSERT INTO Employees VALUES(8, "Jessica", "Wilson", "jessica.wilson@company.com",  65000,  "Finance");
INSERT INTO Employees VALUES(9, "Danilael", "Anderson", "daniel.anderson@company.com", 72000,  "IT");
INSERT INTO Employees VALUES(10, "Ashley", "Taylor", "ashley.taylor@company.com", 58000, "Sales");
INSERT INTO Employees VALUES(11, "William", "Brown", "william.brown@company.com",  78000,  "Marketing");
INSERT INTO Employees VALUES(12, "Sophie", "Devis", "sophia.davis@company.com", 62000,  "HR");


-- Questions Queries 
-- Q.1 Create a constraint to ensure that the salary of an employee is greater than 0.
 
 ALTER TABLE Employees
 ADD CONSTRAINT Salary
 CHECK (salary > 0);

-- Q.2 Create a foreign key constraint in the Employees table to reference the DepartmentID in the Departments table.


ALTER TABLE Employees
ADD DepartmentID INT;

-- Q3. Create a unique constraint on the Email column in the Employees table.
ALTER TABLE Employees 
ADD CONSTRAINT 
UNIQUE (Email);

-- Q4. Create a primary key constraint on the DepartmentID column in the Departments table.





-- Q6 Insert a new employee with a DepartmentID that does not exist in the Departments table and observe the foreign key constraint violation. 
INSERT INTO Employees 
VALUES (13, 'Rutik', 'Dyp', 'Rutik.dyp@company.com', 100000, "Marketing", 6);

-- Q7 Attempt to insert a duplicate email address into the Employees table and observe the unique constraint violation.

INSERT INTO Employees
VALUES (1, 'John', 'Doe', 'john.doe@company.com', 60000, 1);
-- So it is showing error on adding same email.







-- To View table
SELECT * FROM Employees;



-- Table Departments 
USE Employees_db;

CREATE TABLE Departments (
    DepartmentID INT PRIMARY KEY,
    DepartmentName VARCHAR(50) NOT NULL
);

INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (1, 'Marketing');
INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (2, 'Sales');
INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (3, 'IT');
INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (4, 'Finance');
INSERT INTO Departments (DepartmentID, DepartmentName) VALUES (5, 'HR');

ALTER TABLE Employees
ADD CONSTRAINT FK_Department
FOREIGN KEY (DepartmentID)
REFERENCES Departments(DepartmentID);

SELECT * FROM Departments;

-- Q4. Create a primary key constraint on the DepartmentID column in the Departments table.
ALTER TABLE Departments
ADD CONSTRAINT PK
PRIMARY KEY(DepartmentID);


-- Q8 Delete a department from the Departments table that is being referenced by the Employees table and observe the foreign key constraint violation.

-- Attempt to delete a department that is being referenced
DELETE FROM Departments
WHERE DepartmentID = 1;
-- checked successfully

-- Q9 Update the DepartmentID of an existing employee to a value that does not exist in the Departments table and observe the foreign key constraint violation.

-- Attempt to update DepartmentID to a non-existent value (should fail)
UPDATE Employees
SET DepartmentID = 999
WHERE EmployeeID = 1;




-- table Projects
USE Employees_db;

CREATE TABLE Projects (
    ProjectID INT PRIMARY KEY,
    ProjectName VARCHAR(100) NOT NULL,
    DepartmentID INT,
    FOREIGN KEY (DepartmentID) REFERENCES Departments(DepartmentID)
);

-- Q5 
ALTER TABLE Projects
ADD CONSTRAINT FK_Department
FOREIGN KEY (DepartmentID)
REFERENCES Departments(DepartmentID);
